syntax on
set mouse=a
set encoding=UTF-8
set guifont=Noto_Mono_Nerd_Font:h11

set clipboard=unnamed
set number relativenumber

let mapleader=" "

nnoremap <leader>ff <cmd>Telescope find_files<cr>
nnoremap <leader>fg <cmd>Telescope live_grep<cr>
nnoremap <leader>fb <cmd>Telescope buffers<cr>

nnoremap <leader>n :NERDTreeFocus<CR>
nnoremap <C-n> :NERDTreeToggle<CR>

let NERDTreeMouseMode=2

" tab cycles between open tabs
" nnoremap <C-tab> :tabnext<CR>
" nnoremap <C-S-tab> :tabp<CR>

" To open a new empty buffer
" This replaces :tabnew which I used to bind to this mapping
nmap <leader>T :enew<cr>

" Move to the next buffer
nmap <C-tab> :bnext<CR>

" Move to the previous buffer
nmap <C-S-tab> :bprevious<CR>

" Close the current buffer and move to the previous one
" This replicates the idea of closing a tab
nmap <leader>bq :bp <BAR> bd #<CR>

nnoremap <leader>s :update<cr>
nnoremap <leader>q :quit<cr>
nnoremap <leader>r :Reload<cr>

nnoremap <leader>f :! npx prettier --write %<cr>

nnoremap ; :

" duplicate current file, could be made into shortcut:
" :!cp % %:h/new-file.ts

" Start NERDTree when Vim starts with a directory argument.
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists('s:std_in') | execute 'NERDTree' argv()[0] | wincmd p | enew | execute 'cd '.argv()[0] | endif

set shell=/bin/zsh

" Vim plug plugins

call plug#begin('~/.config/nvim/plugged')

  Plug 'nvim-lua/plenary.nvim'
  Plug 'nvim-telescope/telescope.nvim'
  Plug 'tpope/vim-sensible'
  Plug 'preservim/nerdtree'
  Plug 'Xuyuanp/nerdtree-git-plugin'
  Plug 'vim-airline/vim-airline'
  Plug 'vim-airline/vim-airline-themes'
  Plug 'mileszs/ack.vim'
  Plug 'airblade/vim-gitgutter'
  Plug 'ryanoasis/vim-devicons'
  Plug 'tpope/vim-commentary'
  Plug 'mhinz/vim-startify'
  Plug 'ThePrimeagen/vim-be-good'
  Plug 'rebelot/kanagawa.nvim'
  Plug 'nvim-treesitter/nvim-treesitter'
  Plug 'williamboman/mason.nvim', { 'do': ':MasonUpdate' }
  Plug 'williamboman/mason-lspconfig.nvim'
  Plug 'neovim/nvim-lspconfig'

call plug#end()

let g:airline_theme='deus'
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'


" todo: customise these buffer commands to own liking
"
"
" This allows buffers to be hidden if you've modified a buffer.
" This is almost a must if you wish to use buffers in this way.
set hidden


" Show all open buffers and their status
nmap <leader>bl :ls<CR>


:lua require("mason").setup()
:lua require("mason-lspconfig").setup()

:lua require("lspconfig").tsserver.setup{}

:command Reload source ~/.config/nvim/init.vim

" nnoremap <D-/> gcc

" ack.vim --- {{{

" Use ripgrep for searching ⚡️
" Options include:
" --vimgrep -> Needed to parse the rg response properly for ack.vim
" --type-not sql -> Avoid huge sql file dumps as it slows down the search
" --smart-case -> Search case insensitive if all lowercase pattern, Search case sensitively otherwise
let g:ackprg = 'rg --vimgrep --type-not sql --smart-case'

" Auto close the Quickfix list after pressing '<enter>' on a list item
" let g:ack_autoclose = 1

" Any empty ack search will search for the work the cursor is on
let g:ack_use_cword_for_empty_search = 1

" Don't jump to first match
cnoreabbrev Ack Ack!

" Maps <leader>/ so we're ready to type the search keyword
nnoremap <Leader>ft :Ack!<Space>
" }}}

" Navigate quickfix list with ease
nnoremap <silent> [q :cprevious<CR>
nnoremap <silent> ]q :cnext<CR>

" code folding
"

set foldmethod=expr
set foldexpr=nvim_treesitter#foldexpr()
set nofoldenable                     " Disable folding at startup.


" Indentation
set tabstop=4

" TABS
"


" Theme
"
"
"
luafile $DOTFILES/vim/init.lua

